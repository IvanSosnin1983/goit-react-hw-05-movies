{"version":3,"file":"static/js/387.1ea1f19b.chunk.js","mappings":"sOAEaA,E,OAAWC,GAAAA,GAAH,0J,SC8BrB,EA3Ba,WACX,OAAyBC,EAAAA,EAAAA,UAAS,IAAlC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAIR,OAHAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBH,GAASI,MAAK,SAAAC,GAAQ,OAAIN,EAAQM,EAASC,KAAKC,KAA1B,GACvC,GAAE,CAACP,KAEF,SAACL,EAAD,UACGG,GACCA,EAAMU,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,UAAWC,EAAlB,EAAkBA,KAAMC,EAAxB,EAAwBA,aAAxB,OACR,0BACGA,GACC,gBACEC,IAAG,yCAAoCD,GACvCE,MAAO,IACPC,IAAKJ,IAGP,qBAEF,wBAAKA,KACL,uCAAeD,OAXRD,EADD,KAiBjB,C,+LC9BKO,EAAU,mCAGhBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAa,mCAAG,oGACJD,EAAAA,EAAAA,IAAA,qCAAwCD,IADpC,cACrBX,EADqB,yBAGpBA,GAHoB,2CAAH,qDAMbc,EAAY,mCAAG,WAAMnB,GAAN,uFACHiB,EAAAA,EAAAA,IAAA,gBACZjB,EADY,oBACOgB,EADP,oBADG,cACpBX,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOZc,EAAgB,mCAAG,WAAMC,GAAN,uFACPJ,EAAAA,EAAAA,IAAA,6BACCI,EADD,oBACkBL,EADlB,+CADO,cACxBX,EADwB,yBAIvBA,GAJuB,2CAAH,sDAOhBiB,EAAiB,mCAAG,WAAMtB,GAAN,iFAClBiB,EAAAA,EAAAA,IAAA,gBACFjB,EADE,4BACyBgB,EADzB,2BADkB,mFAAH,sDAMjBb,EAAe,mCAAG,WAAMH,GAAN,iFAChBiB,EAAAA,EAAAA,IAAA,gBACFjB,EADE,4BACyBgB,EADzB,oBADgB,mFAAH,qD","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","service/fetchApi.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  list-style: none;\n  display: grid;\n  grid-column-gap: 16px;\n  grid-row-gap: 32px;\n  grid-template-columns: repeat(4, 1fr);\n`;\n","import { fetchMoviesCast } from 'service/fetchApi';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { CastList } from './Cast.styled';\n\nconst Cast = () => {\n  const [casts, setCast] = useState([]);\n  const { movieId } = useParams();\n  useEffect(() => {\n    fetchMoviesCast(movieId).then(response => setCast(response.data.cast));\n  }, [movieId]);\n  return (\n    <CastList>\n      {casts &&\n        casts.map(({ id, character, name, profile_path }) => (\n          <li key={id}>\n            {profile_path ? (\n              <img\n                src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n                width={150}\n                alt={name}\n              />\n            ) : (\n              'There is no photo'\n            )}\n            <h3>{name}</h3>\n            <p>Character: {character}</p>\n          </li>\n        ))}\n    </CastList>\n  );\n};\nexport default Cast;\n","import axios from 'axios';\nconst API_KEY = '82661c1ce7c4f41d15c61fe4ef9077eb';\n// https://api.themoviedb.org/3/trending/movie/day?api_key=<<api_key>>\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  // console.log(responce);\n  return response;\n};\n\nexport const fetchMovieId = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMoviesQuery = async query => {\n  const response = await axios.get(\n    `search/movie?query=${query}&api_key=${API_KEY}&language=en-US&page=1&include_adult=false`\n  );\n  return response;\n};\n\nexport const fetchMoviesReview = async movieId => {\n  return await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n};\n\nexport const fetchMoviesCast = async movieId => {\n  return await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n};\n"],"names":["CastList","styled","useState","casts","setCast","movieId","useParams","useEffect","fetchMoviesCast","then","response","data","cast","map","id","character","name","profile_path","src","width","alt","API_KEY","axios","fetchTrending","fetchMovieId","fetchMoviesQuery","query","fetchMoviesReview"],"sourceRoot":""}